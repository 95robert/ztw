<?php

namespace AppBundle\Repository;

/**
 * UserBetRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserBetRepository extends \Doctrine\ORM\EntityRepository
{
    public function findWithFilterOptions($data){
        return $this->findWithFilterOptionsQuery($data)
            ->getQuery()
            ->getResult();
    }

    public function findWithFilterOptionsQuery($data){
        $query = $this->createQueryBuilder('b');
        if(array_key_exists('id', $data)){
            $query->andWhere('b.id = :id')
                ->setParameter(':id', $data['id']);
        }
        if(array_key_exists('game', $data)){
            $query->andWhere('b.game = :game')
                ->setParameter(':game', $data['game']);
        }
        if(array_key_exists('gameDateMin', $data)){
            $query->join('b.game', 'g')
                ->andWhere('g.date >= :minDate')
                ->setParameter(':minDate', $data['gameDateMin']);
            if(array_key_exists('gameDateMax', $data)){
                $query->andWhere('g.date <= :maxDate')
                    ->setParameter(':maxDate', $data['gameDateMax']);
            }
        }
        if(array_key_exists('user', $data)){
            $query->andWhere('b.user = :user')
                ->setParameter(':user', $data['user']);
        }
        if(array_key_exists('cost', $data)){
            $query->andWhere('b.cost <= :cost')
                ->setParameter(':cost', $data['cost']);
        }
        return $query;
    }

    public function getLeaguesWhereTipsterBet($tipster){
        $userBets = $this->findBy(array(
            'user' => $tipster
        ));

        $leagues = [];
        foreach ($userBets as $bet){
            $leagueID = $bet->getGame()->getLeague()->getId();
            if(!(array_key_exists($leagueID, $leagues))){
                $leagues[$leagueID] = 1;
            }else{
                $leagues[$leagueID]++;
            }
        }

        return $leagues;
    }
}
